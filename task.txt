You are tasked with developing a wallet transaction system using Django 
REST Framework for a financial application. The system should support 
atomic transactions and include user validation during user creation.
Requirements:
1) Atomic Transactions: 
➔ Implement atomic transactions for wallet transactions to ensure that 
either all operations in a transaction succeed or none of them are applied. 
➔ User Validation: ➔ During user creation, ensure that user data is 
validated according to specific criteria, such as unique email addresses 
and required fields.

2) API Endpoints: 
➔ Create RESTful API endpoints for the following functionalities: 
➔ User registration with wallet creation ➔ Wallet balance retrieval 
➔ Wallet deposit ➔ Wallet withdrawal ➔ Transaction history retrieval

3) Authentication and Permissions: 
➔ Implement authentication using JWT (JSON Web Tokens) and set appropriate 
permissions to ensure that only authorized users can access specific 
endpoints.

4) Error Handling: 
➔ Implement robust error handling and response formats for various scenarios, 
including validation errors, insufficient balance, and unauthorized access.

5) Database Models: 
➔ Design Django models for users and wallets, considering relationships, 
fields, and constraints necessary for the wallet system.

Created env
Installed django, Created authentication, wallet apps
Installed DRF, DRF-simplejwt, Black
Created models for user and wallet balance. When a user is created, a wallet will also created using signals.
Migrate models
